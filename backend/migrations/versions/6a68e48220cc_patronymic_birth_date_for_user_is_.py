"""patronymic, birth_date for user; is_active and needs_attention for doctor_patient

Revision ID: 6a68e48220cc
Revises: b15c6586c29e
Create Date: 2025-02-17 12:10:32.161809

"""
import datetime
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '6a68e48220cc'
down_revision: Union[str, None] = 'b15c6586c29e'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('doctor_patients', sa.Column('is_active', sa.Boolean(), nullable=False, server_default='true'))
    op.add_column('doctor_patients', sa.Column('needs_attention', sa.Boolean(), nullable=False, server_default='false'))
    op.add_column('users', sa.Column('patronymic', sa.String(), nullable=True))
    op.add_column('users', sa.Column('birth_date', sa.DateTime(), nullable=False, server_default=str(datetime.date(2000, 1, 1))))
    op.create_index(op.f('ix_users_patronymic'), 'users', ['patronymic'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_users_patronymic'), table_name='users')
    op.drop_column('users', 'birth_date')
    op.drop_column('users', 'patronymic')
    op.drop_column('doctor_patients', 'needs_attention')
    op.drop_column('doctor_patients', 'is_active')
    # ### end Alembic commands ###
